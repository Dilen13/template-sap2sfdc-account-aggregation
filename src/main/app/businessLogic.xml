<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:spring="http://www.springframework.org/schema/beans"
      version="EE-3.5.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd">
    <data-mapper:config name="XML_To_Account_1" transformationGraphPath="xml_to_account_1.grf" doc:name="XML_To_Account_1"/>
    <data-mapper:config name="Map_To_CSV" transformationGraphPath="map_to_csv.grf" doc:name="Map_To_CSV"/>
    <flow name="mainFlow" doc:name="mainFlow" doc:description="This flow is the entry point to the Kick business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.">
        <flow-ref name="gatherDataFlow" doc:name="call gatherDataFlow" doc:description="Call flow, which will obtain all accounts, which have to be merged together."/>
        <flow-ref name="aggregationFlow" doc:name="call aggregationFlow" doc:description="Aggregation is separated in individual flow, which contains all merging/aggregation logic."/>
        <flow-ref name="formatOutputFlow" doc:name="call formatOutputFlow" doc:description="Call output formating flow to provide human readeble output of an aggregation."/>
        <flow-ref name="outboundFlow" doc:name="call outboundFlow" doc:description="Call outbound flow to send aggregation result in human readable format to the endpoinds."/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy" doc:description="If problems occured."/>
    </flow>
    <sub-flow name="gatherDataFlow" doc:name="gatherDataFlow" doc:description="Gathers data from Saleforce and SAP.">
        <enricher source="#[payload]" target="#[flowVars['accountsFromOrgA']]" doc:name="Store result in FlowVar 'accountsFromOrgA'" doc:description="Query all accounts from the SalesForce. Only id, billingAddress and account name are fetched. Result is stored into the flowVar as 'accountsFromOrgA'.">
            <sfdc:query config-ref="Salesforce" query="dsql:SELECT BillingStreet,Id,Name FROM Account" doc:name="query all accounts from SalesForce"/>
        </enricher>
        <enricher source="#[payload]" target="#[flowVars['accountsFromOrgB']]" doc:name="Store result in FlowVar 'accountsFromOrgB'" doc:description="Query all customers from the SAP. The query result is prepared for merging by conversion to the Saleforce's Account type. For conversion, the DataMapper is used. Result is stored into the flowVar as 'accountsFromOrgB'.">
            <processor-chain doc:name="Processor Chain">
                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_CUSTOMER_GETLIST" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="query customers from SAP">
                    <sap:definition><![CDATA[<BAPI_CUSTOMER_GETLIST type="function">
	<import>
		<MAXROWS>5</MAXROWS>
	</import>
  	<tables>
  	<IDRANGE type="table">
		<table name="IDRANGE">
			<row id="0">
				<SIGN>I</SIGN>
				<OPTION>CP</OPTION>
				<LOW>*</LOW>
				<HIGH></HIGH>
			</row>
		</table>
	</IDRANGE>
	</tables>
</BAPI_CUSTOMER_GETLIST>]]></sap:definition>

                </sap:outbound-endpoint>
                <data-mapper:transform config-ref="XML_To_Account_1" doc:name="convert SAP response to Salesforce Account"/>
                <logger message="SAP: #[payload]" level="INFO" doc:name="Logger"/>
            </processor-chain>
        </enricher>
    </sub-flow>
    <sub-flow name="aggregationFlow" doc:name="aggregationFlow" doc:description="Runs aggregation for accounts from Salesforce and converted accounts from SAP.">
        <custom-transformer class="org.mule.templates.transformers.SFDCAccountMerge" doc:name="Custom component to build merged accounts list"/>
    </sub-flow>
    <sub-flow name="formatOutputFlow" doc:name="formatOutputFlow" doc:description="Aggregation output is sorted by the custom component(see org.mule.templates.transformers.SortAccountList) and mapped to CSV format.">
        <custom-transformer class="org.mule.templates.transformers.SortAccountList" doc:name="Custom component to sort users list"/>
        <data-mapper:transform config-ref="Map_To_CSV" doc:name="Map To CSV"/>
        <object-to-string-transformer doc:name="CSV Output Object to String"/>
    </sub-flow>

</mule>
